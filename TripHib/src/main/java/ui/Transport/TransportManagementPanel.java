/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Transport;

import Transport.TransportationRoute;
import User.UserSession;
import java.awt.Container;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import service.BookingService;
import ui.WorkRequest.WorkRequestPanel;

/**
 *
 * @author godalaramakrishnareddy
 */
public class TransportManagementPanel extends javax.swing.JPanel {
    private BookingService bookingService;
    private DefaultTableModel PublicTransitTableModel;

    /**
     * Creates new form TransportManagementPanel
     */
    public TransportManagementPanel() {
        initComponents();
        bookingService = BookingService.getInstance();
        setupTable();
        populateTables();
        
        // Add table selection listener with null checks
        tblPublicTransit.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int row = tblPublicTransit.getSelectedRow();
                if (row >= 0) {
                    loadRowData(row);
                }
            }
        });
    }
private void loadRowData(int row) {
        try {
            txtRouteName.setText(getTableValueOrEmpty(row, 0));
            txtStartLocation.setText(getTableValueOrEmpty(row, 1));
            txtEndLocation.setText(getTableValueOrEmpty(row, 2));
            txtPrice.setText(getTableValueOrEmpty(row, 3));
            txtFrequency.setText(getTableValueOrEmpty(row, 4));
            txtCapacity.setText(getTableValueOrEmpty(row, 5));
            chkRouteActiveStatus.setSelected(
                "Active".equals(getTableValueOrEmpty(row, 6))
            );
        } catch (Exception ex) {
            System.out.println("Error loading row data: " + ex.getMessage());
        }
    }
    
    private String getTableValueOrEmpty(int row, int column) {
        Object value = PublicTransitTableModel.getValueAt(row, column);
        return value != null ? value.toString() : "";
    }

    private void setupTable() {
        PublicTransitTableModel = (DefaultTableModel) tblPublicTransit.getModel();
        PublicTransitTableModel.setColumnIdentifiers(new String[]{
            "Route Name", "Start Location", "End Location", 
            "Price", "Frequency", "Capacity", "Status"
        });
    }

    private void populateTables() {
        PublicTransitTableModel.setRowCount(0);
        for (TransportationRoute route : bookingService.getRoutes()) {
            PublicTransitTableModel.addRow(new Object[]{
                route.getRouteName(),
                route.getStartLocation(),
                route.getEndLocation(),
                route.getPrice(),
                route.getFrequency(),
                route.getCapacity(),
                route.isRouteActiveStatus()? "Active" : "Inactive"
            });
        }
    }

    private void validateInputs() throws Exception {
        if (txtRouteName.getText().trim().isEmpty() ||
            txtStartLocation.getText().trim().isEmpty() ||
            txtEndLocation.getText().trim().isEmpty() ||
            txtPrice.getText().trim().isEmpty() ||
            txtFrequency.getText().trim().isEmpty() ||
            txtCapacity.getText().trim().isEmpty()) {
            throw new Exception("All fields are required");
        }
    }

    private void clearForm() {
        txtRouteName.setText("");
        txtStartLocation.setText("");
        txtEndLocation.setText("");
        txtPrice.setText("");
        txtFrequency.setText("");
        txtCapacity.setText("");
        chkRouteActiveStatus.setSelected(false);
    
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPrice = new javax.swing.JTextField();
        lblFrequency = new javax.swing.JLabel();
        txtFrequency = new javax.swing.JTextField();
        lblCapacity = new javax.swing.JLabel();
        lblRouteName = new javax.swing.JLabel();
        txtCapacity = new javax.swing.JTextField();
        txtRouteName = new javax.swing.JTextField();
        chkRouteActiveStatus = new javax.swing.JCheckBox();
        lblStartLocation = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        txtStartLocation = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        lblEndLocation = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        txtEndLocation = new javax.swing.JTextField();
        lblPrice = new javax.swing.JLabel();
        lblPublicTransitRoutes = new javax.swing.JLabel();
        btnRouteOptimization = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPublicTransit = new javax.swing.JTable();
        btnWorkRequest = new javax.swing.JButton();

        setBackground(new java.awt.Color(161, 197, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, 86, -1));

        lblFrequency.setText("Frequency");
        add(lblFrequency, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, -1, -1));
        add(txtFrequency, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 90, 86, -1));

        lblCapacity.setText("Capacity");
        add(lblCapacity, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 120, 61, -1));

        lblRouteName.setText("Route Name");
        add(lblRouteName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 80, -1));
        add(txtCapacity, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 120, 86, -1));
        add(txtRouteName, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 86, -1));

        chkRouteActiveStatus.setText("Route Active Status");
        add(chkRouteActiveStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 90, -1, -1));

        lblStartLocation.setText("Start Location");
        add(lblStartLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        btnAdd.setBackground(new java.awt.Color(70, 130, 180));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));
        add(txtStartLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 86, -1));

        btnUpdate.setBackground(new java.awt.Color(70, 130, 180));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, -1, -1));

        lblEndLocation.setText("End Location");
        add(lblEndLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 80, -1));

        btnDelete.setBackground(new java.awt.Color(70, 130, 180));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, -1, -1));
        add(txtEndLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 86, -1));

        lblPrice.setText("Price");
        add(lblPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 60, 46, 23));

        lblPublicTransitRoutes.setText("Public Transit Routes ");
        add(lblPublicTransitRoutes, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, -1));

        btnRouteOptimization.setBackground(new java.awt.Color(70, 130, 180));
        btnRouteOptimization.setText("Route Optimization");
        btnRouteOptimization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRouteOptimizationActionPerformed(evt);
            }
        });
        add(btnRouteOptimization, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, -1));

        tblPublicTransit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Route Name", "Start Location", "End Location", "Price", "Frequency", "Capacity", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPublicTransit);

        jScrollPane2.setViewportView(jScrollPane1);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 602, 134));

        btnWorkRequest.setBackground(new java.awt.Color(70, 130, 180));
        btnWorkRequest.setText("Work Request");
        btnWorkRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWorkRequestActionPerformed(evt);
            }
        });
        add(btnWorkRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 160, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = tblPublicTransit.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a route");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this,
            "Are you sure you want to delete this route?");

        if (confirm == JOptionPane.YES_OPTION) {
            String routeName = PublicTransitTableModel.getValueAt(selectedRow, 0).toString();
            bookingService.deleteRoute(routeName); // Delete from service
            PublicTransitTableModel.removeRow(selectedRow);
            clearForm();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int selectedRow = tblPublicTransit.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a route");
            return;
        }

        try {
            String routeName = txtRouteName.getText();
            String startLocation = txtStartLocation.getText();
            String endLocation = txtEndLocation.getText();
            double price = Double.parseDouble(txtPrice.getText());
            int frequency = Integer.parseInt(txtFrequency.getText());
            int capacity = Integer.parseInt(txtCapacity.getText());
            boolean isActive = chkRouteActiveStatus.isSelected();

            TransportationRoute route = new TransportationRoute(
                selectedRow + 1,
                routeName,
                startLocation,
                endLocation,
                price,
                frequency,
                capacity,
                isActive
            );

            bookingService.updateRoute(route); // Update in service

            // Update table
            PublicTransitTableModel.setValueAt(routeName, selectedRow, 0);
            PublicTransitTableModel.setValueAt(startLocation, selectedRow, 1);
            PublicTransitTableModel.setValueAt(endLocation, selectedRow, 2);
            PublicTransitTableModel.setValueAt(price, selectedRow, 3);
            PublicTransitTableModel.setValueAt(frequency, selectedRow, 4);
            PublicTransitTableModel.setValueAt(capacity, selectedRow, 5);
            PublicTransitTableModel.setValueAt(isActive ? "Active" : "Inactive", selectedRow, 6);

            clearForm();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter valid numbers for price and capacity");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        try{
            String routename = txtRouteName.getText();
            String startlocation = txtStartLocation.getText();
            String endlocation = txtEndLocation.getText();
            double price = Double.parseDouble(txtPrice.getText());
            int capacity = Integer.parseInt(txtCapacity.getText());
            int frequency = Integer.parseInt(txtFrequency.getText());
            boolean routeActiveStatus = chkRouteActiveStatus.isSelected();

            PublicTransitTableModel.addRow(new Object[]{
                routename,
                startlocation,
                endlocation,
                price,
                frequency,
                capacity,
                routeActiveStatus ? "Active" : "Inactive"
            });
            TransportationRoute route = new TransportationRoute(
                PublicTransitTableModel.getRowCount(),
                routename,
                startlocation,
                endlocation,
                price,
                frequency,
                capacity,
                routeActiveStatus
            );
            bookingService.addRoute(route);

            clearForm();

        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Please enter valid numbers for price and capacity");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnWorkRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWorkRequestActionPerformed
        String username = UserSession.getInstance().getUsername();
        String organization = "PublicTransitCoordination";
        String enterprise = "TransportEnterprise";

        Container parent = this.getParent();
        parent.removeAll();
        parent.add(new WorkRequestPanel(username, organization, enterprise,"TransportManager"));
        parent.revalidate();
        parent.repaint();       // TODO add your handling code here:
    }//GEN-LAST:event_btnWorkRequestActionPerformed

    private void btnRouteOptimizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRouteOptimizationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRouteOptimizationActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRouteOptimization;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnWorkRequest;
    private javax.swing.JCheckBox chkRouteActiveStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCapacity;
    private javax.swing.JLabel lblEndLocation;
    private javax.swing.JLabel lblFrequency;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblPublicTransitRoutes;
    private javax.swing.JLabel lblRouteName;
    private javax.swing.JLabel lblStartLocation;
    private javax.swing.JTable tblPublicTransit;
    private javax.swing.JTextField txtCapacity;
    private javax.swing.JTextField txtEndLocation;
    private javax.swing.JTextField txtFrequency;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtRouteName;
    private javax.swing.JTextField txtStartLocation;
    // End of variables declaration//GEN-END:variables

 
}

